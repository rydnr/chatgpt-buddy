#+TITLE: Web-Buddy Framework Documentation
#+AUTHOR: Web-Buddy Team
#+DATE: 2025-07-06
#+DESCRIPTION: Comprehensive documentation for the Web-Buddy framework

* Overview
The Web-Buddy framework provides contract-based web automation through a three-layer architecture designed for maintainability, testability, and extensibility.

* Documentation Structure

** Architecture Decision Records (ADRs)
- [[file:adrs/adr-001-layered-client-architecture.org][ADR-001: Layered Client Architecture]] - Core architectural decisions and patterns

** Implementation Guides
- [[file:implementation-guide.org][Implementation Guide]] - Comprehensive guide for developers
- [[file:../specs/web-buddy-framework-roadmap.md][Framework Roadmap]] - Development phases and milestones

** Examples and Demonstrations
- [[file:../examples/research-automation-workflow.ts][Research Automation Workflow]] - Multi-domain research automation
- [[file:../examples/competitive-intelligence-automation.ts][Competitive Intelligence]] - Automated competitor analysis
- [[file:../examples/contract-validation-demo.ts][Contract Validation Demo]] - ATDD framework demonstration

** Domain Implementations
- [[file:../implementations/google-buddy/][Google-Buddy]] - Google search automation
- [[file:../implementations/chatgpt-buddy/][ChatGPT-Buddy]] - ChatGPT conversation management
- [[file:../implementations/wikipedia-buddy/][Wikipedia-Buddy]] - Wikipedia research automation

** Testing Framework
- [[file:../packages/testing/][ATDD Testing Framework]] - Contract-based acceptance testing
- Cross-browser validation utilities
- Performance benchmarking tools
- Accessibility compliance testing

* Quick Start

** Installation
#+BEGIN_SRC bash
git clone https://github.com/rydnr/chatgpt-buddy.git
cd chatgpt-buddy/web-buddy
pnpm install
pnpm build
#+END_SRC

** Basic Usage
#+BEGIN_SRC typescript
import { GoogleBuddyClient } from '@web-buddy/google-buddy';

const client = new GoogleBuddyClient();
await client.enterSearchTerm('web automation');
const results = await client.getSearchResults();
#+END_SRC

* Architecture

The Web-Buddy framework follows a three-layer architecture:

#+BEGIN_SRC ascii
┌─────────────────────────────────────────────────┐
│                CLIENT LAYER                     │ ← Business-focused APIs
│   GoogleBuddyClient.enterSearchTerm()          │
├─────────────────────────────────────────────────┤
│               DOMAIN LAYER                      │ ← Site-specific logic
│   ENTER_SEARCH_TERM, SELECT_PROJECT            │
├─────────────────────────────────────────────────┤
│               CORE LAYER                        │ ← Infrastructure
│   WebBuddyClient, WebBuddyServer               │
└─────────────────────────────────────────────────┘
#+END_SRC

* Key Features

** Contract-Based Automation
- Define automation capabilities as formal contracts
- Validate contracts against real web pages
- Ensure compatibility across browser environments

** ATDD Framework
- Acceptance Test-Driven Development for web automation
- Cross-browser compatibility testing
- Performance benchmarking and accessibility validation

** Event-Driven Architecture
- All communication through typed events
- Correlation IDs for request tracking
- Robust error handling and retry logic

** Multi-Domain Support
- Generic infrastructure supports any website
- Site-specific implementations for Google, ChatGPT, Wikipedia
- Easy extension to new domains

* Development Status

** Completed Phases
- ✅ Phase 1: Foundation & Shared Domain
- ✅ Phase 2: Domain-Specific Implementations
- ✅ Phase 3: Extension Development & Server Infrastructure
- ✅ Phase 4: ATDD Implementation
- ✅ Phase 5: Documentation and Examples

** Upcoming Phases
- 🔄 Phase 6: Semantest Rebranding & DNS-Style Naming
- 📋 Phase 7: Secure Cloud Integration & MCP Bridge

* Community

** Contributing
- Follow the three-layer architecture pattern
- Write comprehensive tests using the ATDD framework
- Document all public APIs with examples
- Use TypeScript for type safety

** Support
- GitHub Issues for bug reports
- Discussions for questions and feature requests
- Documentation updates welcome

* Resources

** External Links
- [[https://playwright.dev/][Playwright Documentation]] (Testing framework)
- [[https://www.typescriptlang.org/][TypeScript]] (Primary language)
- [[https://pnpm.io/][pnpm]] (Package manager)

** Related Projects
- [[file:../../typescript-eda/][TypeScript-EDA]] - Event-driven architecture foundation
- Browser extension implementations
- Client SDK generators